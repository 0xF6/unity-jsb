    
BUGFIX:
    ☐ 带变参方法变参类型为Object时，存在不一致行为 (例如 Debug.LogWarningFormat)
    ☐ C# 运算符本身存在重载时，需要生成不同的绑定名
    ☐ 以 toString 形式导出的 ToString 中触发异常将导致调用栈溢出崩溃
    ☐ dotnetcore 执行反射绑定函数时异常

必要:
    ☐ 反射模式支持运算符重载 (考虑接入v8, 可能取消运算符重载的导入)
    ☐ JS Worker Runtime 的类型绑定
    ☐ 主模块与一般模块共用一致的加载流程
    ☐ ES模块与require模块逻辑一致
    ✔ 支持 dotnetcore/.net @done(21-05-01 08:06)
    ☐ 额外的运行时通讯机制 (jsb.runtimes, jsb.postMessage)
    ☐ 考虑 Worker 传递消息时 C# 对象的传输 (使用加锁共享池?)
    ☐ JS Worker SAB
    ✔ types lazy load (代替 warmup) @done(21-05-01 08:01)
    ☐ V8 backend (windows) 

编辑器支持:
    ☐ 完善 JSEditorWindow 功能
    ☐ 支持 ScriptableObject
    ✔ 提供 JS 模块查看窗口 @done(21-05-01 08:11)
    ✔ 支持热加载 @done(21-05-01 08:05)

Codegen:
    ☐ 优化生成速度
    ☐ JSB_UNITYLESS 环境下 d.ts 的输出
    ☐ 提供选项自动添加关联类型的导出 (如果是泛型具体类, 且对应基类已经导出, 那么自动导出此泛型具体类)
    ☐ 子类中存在不同签名的同名方法时 (非虚)  时, 输出 ts-ignore
    ☐ 在单一文件中生成 cs 代码
    ☐ jsb.autogen.d.ts 调整
        ☐ 按大小或行数自动分割
        ☐ 按模块分隔
    
其他:
    ☐ MVVM (databinding)
    ☐ for dotnet core
    ☐ sqlite binding 
    ☐ code graph
    ☐ HMR (code hot reload)

次要:
    ☐ 代码文档注释
    ☐ quickjs Date 只处理了UTC时间
    ☐ 以更通用且自动化的方式生成可继承的类型
    ☐ 在 unity_qjs.c 中提供 fopen/fread/fclose (为了绕过 C# 中对已经在其他程序中打开的独占文件的读取限制)
    ✔ 提供 reload 接口 (清空指定模块, 并使用原 parent 进行重新载入) @done(21-05-01 08:05)
    ✔ 模块发生重载时, 关联模块也需要重载 @done(21-05-01 08:05)

2021-01-26 v1.3.0:
    ✔ JS Behaviour Inspector 支持使用脚本定义编辑器 @done(20-12-14 19:45)
    ✔ 多维数组的支持 @done(20-12-08 14:46)
    ✔ C# 常用运算符生成绑定代码的修正 (op_Multiply 等) @done(20-12-22 18:00)
    ✔ 修正重载匹配 (js_match_type 子类也可通过判定) @done(20-12-16 10:10)
    ✔ 不生成绑定代码的情况下使用反射模式执行 (只生成 d.ts) (仍待完善) @done(20-12-29 15:30)
    ✔ 反射模式下支持脚本扩展特定类型 (MonoBehaviour, Editor 等) @done(20-12-29 16:50)
    ✔ codegen 对生成代码的修改方式调整, 以便兼容反射模式 @done(21-01-22 23:10)
    ✔ 反射模式支持可变参数 @done(21-01-25 21:28)
    ✔ 带 ref/out 参数支持的委托绑定 (反射模式不支持) @done(20-12-15 20:12)
    ✔ 导出的目标代码段对 UNITY_EDITOR 的要求改为更通用的 Defines 集合的要求 @done(20-12-08 13:47)
    ✔ 生成所有导出类的JS模块列表 (可用于 webpack.config 中直接载入并作为 externals 配置项) (Prefs.jsModulePackInfo) @done(20-12-21 22:04)
    ✔ [取消] 通过 BindingManager 辅助得到 export types (此功能已通过反射调用直接介入运行时) @done(20-12-29 15:32)
    ✔ [取消] 增加运行时平台分类 @done(20-12-08 15:25)

2020-12-02 v1.2.1:
    ✔ github workflows @done(20-12-02 20:14)
    ✔ Worker terminate 终止 (需要合理处理释放) @done(20-12-01 12:30)
    ✔ 处理 JSRuntime 死循环 @done(20-12-01 12:30)
    ✔ @high 修正 Javascript Engine Stats 信息的跨线程访问 (改为异步请求) @done(20-11-30 18:40)
    ✔ JSWorker postMessage/onmessage 传递 JS Object 崩溃 @done(20-11-30 18:08)
    ✔ JSWorker 消息传值参数改为 e.data @done(20-11-30 18:21)

2020-11-28 v1.2.0:
    ✔ 提供导出类型是否 disposable 的选项 @done(20-11-20 10:09)
    ✔ EventType 导入大写版本 @done(20-11-28 22:15)
    ✔ @high JSConsole 提供 auto complete 支持 @done(20-11-28 22:33)
    ✔ IScriptFinalize => IDisposable @done(20-11-18 22:00)
    ✔ 提供 jsb.SetDisposable(o, disposable) @done(20-11-20 10:08)
    ✔ await Task 改为不依赖 Unity Awaiter, 直接异步等待转同步事件触发 @done(20-11-19 19:54)
    ✔ 携带特殊参数时, 生成代码的argc数量和索引调整 @done(20-11-26 14:51)
    ✔ 修正扩展函数的 d.ts 声明生成 @done(20-11-18 19:07)
    
2020-11-13 v1.1.2:
    ✔ 提供选项生成随机命名的绑定函数 @done(20-11-13 15:02) @project(必要)
    ✔ 提供选项全局/个别禁用运算符重载转换 @done(20-11-13 12:27) @project(必要)
    ✔ 修正 ref 参数传参 (codegen for in/out) @done(20-10-12 10:21) @project(必要)
    ✔ 支持 JSAssetPostProcessor @done(20-11-09 14:11) @project(编辑器支持)
    ✔ 支持文件变化重载 @done(20-11-08 21:15) @project(编辑器支持)
    ✔ 支持继承 EditorWindow (JSEditorWindow 功能) @done(20-10-14 17:20) @project(编辑器支持)
    ✔ TypeRegister: 改为不针对一个特定的 thisObject 进行类型注册. 总是通过 CreateNamespace/CreateClass 产生一个对象. 以解决类型的按需注册. @done(20-11-02 10:24) @project(导出类模块化组织-备忘)
    ✔ (暂时不做) TypeDB.GetPrototypeOf：处理类型 lazy load @done(20-11-02 10:24) @project(导出类模块化组织-备忘)
    ✔ 调整代码生成, 生成模块内 namespace 命名 (分割的) @done(20-11-02 10:25) @project(导出类模块化组织-备忘)
    ✔ 泛型类的模块内注册名不正确 (需要使用平面化具体名) @done(20-11-02 15:55) @project(导出类模块化组织-备忘.BUGFIX)
    ✔ 导出接口声明 (interface) @done(20-09-30 17:23) @project(次要)
    ✔ 修复 UnityEvent<> 的 d.ts 输出 @done(20-10-04 12:25) @project(次要)
    ✔ types in module (and lazy binding for types) @done(20-11-02 10:26) @project(次要)
    ✔ 处理互相依赖的问题 @done(20-11-02 10:26) @project(次要)
    ✔ 导出泛型声明 (generic dummy interface + concrete class) @done(20-09-30 17:23) @project(次要)
    ✔ 生成 d.ts @done(20-06-01 12:00) @project(次要)
    ✔ 重写 ref/out 操作 @done(20-09-29 13:52) @project(次要)
    ✔ 可以通过 ref/out 额外指定 type 信息辅助重载匹配 @done(20-09-29 13:54) @project(次要)
    ✔ 移除 csharp 端的 EventDispatcher (并未实现) @done(20-09-29 14:06) @project(次要)
